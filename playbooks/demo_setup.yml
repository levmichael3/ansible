- hosts: localhost
  connection: local
  gather_facts: False
  pre_tasks:
    - include_vars: ec2_vars/{{type}}.yml
  vars:
    ec2_group_type: "{{type}}"
    volumes:
      - device_name: /dev/sda1
        device_type: gp2
        volume_size: "{{ ec2_volume_size }}"
        delete_on_termination: true
  tasks:
  - name: Create a security group
    ec2_group:
      name: "{{ ec2_security_group }}"
      description: Security Group for demo servers
      region: "{{ ec2_region }}"
      rules:
        - proto: tcp
          type: ssh
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
  - name: Provision a set of demo instances
    ec2:
       instance_type: "{{ ec2_instance_type }}"
       group: "{{ ec2_security_group }}"
       region: "{{ ec2_region }}"
       image: "{{ ec2_image }}"
       key_name: "{{ ec2_key }}"
       wait: true
       count: 1
    register: ec2
  - debug: var=ec2

  - name: Wait for SSH to come up
    local_action: wait_for
                  host={{ item.public_dns_name }}
                  port=22
                  state=absent
    with_items: ec2.instances

  - name: Add tag to Instance(s)
    local_action: ec2_tag resource={{ item.id }} region={{ item.region }} state=present
    with_items: ec2.instances
    args:
      tags:
        Name: "{{ec2_group_type}}"
  - name: Add tagged instance public IPs to host group
    add_host: hostname={{ item.public_ip }} >
              groups=tag_Type_{{ec2_security_group}},tag_Environment_{{ec2_tag_Environment}}
              groupname={{ec2_group_type}}
              ec2_region={{ec2_region}}
              ec2_tag_Name={{ec2_tag_Name}}
              ec2_tag_Environment={{ec2_tag_Environment}}
              ec2_ip_address={{item.public_ip}}
    with_items: ec2.instances
